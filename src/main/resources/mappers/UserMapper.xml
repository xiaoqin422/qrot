<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stuxx.dao.UserDao">

    <resultMap type="cn.stuxx.model.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="qCode" column="q_code" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="roles" column="roles" jdbcType="VARCHAR" typeHandler="cn.stuxx.config.mybatis.StringListTypeHandler"/>
        <result property="isDisable" column="is_disable" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
    </resultMap>
    <!--一种动态的insert语句-->
    <sql id="UserInfoColumns">
        <trim suffixOverrides=",">
            <if test="username != null and username != ''">
                username,
            </if>
            <if test="password != null and password != ''">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="name != null and name != ''">
                name,
            </if>
            <if test="qCode != null and qCode != ''">
                q_code,
            </if>
            <if test="email != null and email != ''">
                email,
            </if>
            <if test="phone != null and phone != ''">
                phone,
            </if>
            <if test="roles != null">
                roles,
            </if>
            <if test="isDisable != null">
                is_disable,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDelete != null">
                is_delete
            </if>
        </trim>
    </sql>

    <sql id="UserInfoValues">
        <trim suffixOverrides=",">
            <if test="username != null and username != ''">
                #{username},
            </if>
            <if test="password != null and password != ''">
                #{password},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="qCode != null and qCode != ''">
                #{qCode},
            </if>
            <if test="email != null and email != ''">
                #{email},
            </if>
            <if test="phone != null and phone != ''">
                #{phone},
            </if>
            <if test="roles != null">
                #{roles},
            </if>
            <if test="isDisable != null">
                #{isDisable},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="isDelete != null">
                #{isDelete}
            </if>
        </trim>
    </sql>
    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               username,
               password,
               sex,
               name,
               q_code,
               email,
               phone,
               roles,
               is_disable,
               create_time,
               update_time,
               is_delete
        from user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, username, password, sex, name, q_code, email, phone, roles, is_disable, create_time, update_time, is_delete
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="qCode != null and qCode != ''">
                and q_code = #{qCode}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="roles != null">
                and roles = #{roles}
            </if>
            <if test="isDisable != null">
                and is_disable = #{isDisable}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
        </where>
    </select>

    <select id="selectUserByIDANDPermissionId" resultMap="UserMap">
        SELECT u.*
        FROM user u
                 LEFT JOIN role r ON JSON_CONTAINS(u.roles, CAST(r.id AS CHAR))
                 LEFT JOIN permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId} AND p.id = #{permissionId}
    </select>

    <select id="selectUserByPermissionId" resultMap="UserMap">
        SELECT u.*
        FROM user u
                 LEFT JOIN role r ON JSON_CONTAINS(u.roles, CAST(r.id AS CHAR))
                 LEFT JOIN permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE p.id = #{permissionId}
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(*)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="qCode != null and qCode != ''">
                and q_code = #{qCode}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="roles != null">
                and roles = #{roles}
            </if>
            <if test="isDisable != null">
                and is_disable = #{isDisable}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, sex, name, q_code, email, phone, roles, is_disable, create_time,
                         update_time, is_delete)
        values (#{username}, #{password}, #{sex}, #{name}, #{qCode}, #{email}, #{phone}, #{roles}, #{isDisable},
                #{createTime}, #{updateTime}, #{isDelete})
    </insert>

    <!--新增非空列-->
    <insert id="insertOnDefault" keyProperty="id" useGeneratedKeys="true">
        insert into user(<include refid="UserInfoColumns"/>)
        values(<include refid="UserInfoValues"/>)
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, sex, name, q_code, email, phone, roles, is_disable, create_time,
        update_time, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.sex}, #{entity.name}, #{entity.qCode}, #{entity.email},
            #{entity.phone}, #{entity.roles}, #{entity.isDisable}, #{entity.createTime}, #{entity.updateTime},
            #{entity.isDelete})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(username, password, sex, name, q_code, email, phone, roles, is_disable, create_time,
        update_time, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.sex}, #{entity.name}, #{entity.qCode}, #{entity.email},
            #{entity.phone}, #{entity.roles}, #{entity.isDisable}, #{entity.createTime}, #{entity.updateTime},
            #{entity.isDelete})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        sex = values(sex),
        name = values(name),
        q_code = values(q_code),
        email = values(email),
        phone = values(phone),
        roles = values(roles),
        is_disable = values(is_disable),
        create_time = values(create_time),
        update_time = values(update_time),
        is_delete = values(is_delete)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="qCode != null and qCode != ''">
                q_code = #{qCode},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="roles != null">
                roles = #{roles},
            </if>
            <if test="isDisable != null">
                is_disable = #{isDisable},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>

</mapper>
